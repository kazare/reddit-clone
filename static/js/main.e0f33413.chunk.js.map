{"version":3,"sources":["App.js","Feedback.js","Feed.js","index.js"],"names":["App","useState","token","setToken","posts","setPosts","ready","setReady","sort","setSort","message","home","params","URLSearchParams","append","tokenData","a","fetch","method","headers","Buffer","from","process","toString","body","then","resp","json","respData","response","access_token","console","log","catch","error","useEffect","getPosts","d","datas","data","children","handleClick","event","preventDefault","target","value","className","action","type","onClick","map","post","index","postData","subreddit","subreddit_name_prefixed","author","title","selftext","selftext_html","score","permalink","comments","num_comments","flair","link_flair_text","flair_color","link_flair_background_color","flair_text_color","link_flair_text_color","time","created_utc","awards","all_awardings","url","video","media","postType","post_hint","id","Feedback","Feed","num","ms","decodeHtml","html","txt","document","createElement","innerHTML","childNodes","length","nodeValue","href","rel","name","Math","round","date","locale","award","src","icon_url","alt","count","style","backgroundColor","dangerouslySetInnerHTML","__html","controls","reddit_video","fallback_url","oembed","typeOfPost","TimeAgo","addDefaultLocale","en","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0f33413.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Feedback from \"./Feedback\";\r\nimport Feed from \"./Feed\";\r\n\r\nconst App = () => {\r\n   const [token, setToken] = useState('');\r\n   const [posts, setPosts] = useState([]);\r\n   const [ready, setReady] = useState(false);\r\n   const [sort, setSort] = useState('hot');\r\n   const [message, setMessage] = useState('Loading . . .');\r\n\r\n\r\n   const sub = 'r/Parenting';\r\n   const subPosts = `${sub}/${sort}/`;\r\n   const home = `${sort}`;\r\n\r\n   const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\n   const params = new URLSearchParams();\r\n   params.append('grant_type', 'https://oauth.reddit.com/grants/installed_client');\r\n   params.append('device_id', 'DO_NOT_TRACK_THIS_DEVICE');\r\n\r\n   const tokenData = async () => {\r\n      let response;\r\n\r\n      await fetch('https://www.reddit.com/api/v1/access_token', {\r\n         method: 'POST',\r\n         headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            'Authorization': `Basic ${Buffer.from(`${CLIENT_ID}:`).toString('base64')}`\r\n         },\r\n         body: params\r\n      })\r\n         .then(resp => resp.json())\r\n         .then((respData) => {\r\n            response = respData.access_token;\r\n            //time = respData.expires_in;\r\n\r\n            console.log('First token: ' + response);\r\n            setToken(response);\r\n         })\r\n         .catch(error => console.log(\"Error: \", error))\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (token === '') {\r\n         console.log(\"The website is loaded\");\r\n         tokenData();\r\n      }\r\n   });\r\n\r\n   const getPosts = async (token) => {\r\n      await fetch(`https://oauth.reddit.com/${home}`, {\r\n         method: 'GET',\r\n         headers: {\r\n            'Authorization': `bearer ${token}`,\r\n            'User-Agent': 'windows:com:v1 (by Kazare)'\r\n         }\r\n      })\r\n         .then(d => d.json())\r\n         .then((datas) => {\r\n            setPosts(datas.data.children);\r\n            setReady(true);\r\n            console.log(datas);\r\n         })\r\n         .catch(error => console.log(\"ERROR: \", error))\r\n   };\r\n\r\n   useEffect(() => {\r\n      console.log(\"This is the current token: \" + token);\r\n      getPosts(token);\r\n   }, [token, sort]);\r\n\r\n\r\n   const handleClick = (event) => {\r\n      event.preventDefault();\r\n      console.log(\"Button: \" + event.target.value);\r\n      setSort(event.target.value);\r\n   };\r\n\r\n   return (\r\n      <div className=\"App\" >\r\n\r\n         <div className=\"searchBar\">\r\n            <h1 className=\"title\">readit</h1>\r\n            <form action=\"input\">\r\n               <input type=\"text\" />\r\n            </form>\r\n         </div>\r\n         <div className=\"container\">\r\n            <div className=\"filters\">\r\n               <button value=\"hot\" onClick={handleClick}>HOT</button>\r\n               <button value=\"new\" onClick={handleClick}>NEW</button>\r\n               <button value=\"top\" onClick={handleClick}>TOP</button>\r\n               <button>Card</button>\r\n            </div>\r\n            <div className=\"cardContainer\">\r\n               {ready ?\r\n                  posts.map((post, index) => {\r\n                     let postData = post.data;\r\n                     return (\r\n                        <Feed\r\n                           key={postData.id}\r\n                           data={postData}\r\n                           subreddit={postData.subreddit_name_prefixed}\r\n                           author={postData.author}\r\n                           title={postData.title}\r\n                           selftext={postData.selftext_html}\r\n                           score={postData.score}\r\n                           permalink={postData.permalink}\r\n                           comments={postData.num_comments}\r\n                           flair={postData.link_flair_text}\r\n                           flair_color={postData.link_flair_background_color}\r\n                           flair_text_color={postData.link_flair_text_color}\r\n                           time={postData.created_utc}\r\n                           awards={postData.all_awardings}\r\n                           url={postData.url}\r\n                           video={postData.media}\r\n                           postType={postData.post_hint}\r\n                        />\r\n                     );\r\n                  })\r\n                  : <Feedback message={message} />}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","const Feedback = ({ message }) => {\r\n   return (\r\n      <div className=\"infoBox\">{message}</div>\r\n   );\r\n}\r\n\r\nexport default Feedback;","import \"./Feed.css\";\r\nimport ReactTimeAgo from 'react-time-ago';\r\n\r\n\r\nconst Feed = ({ data, subreddit, author, title, selftext, score, permalink, comments, flair, flair_color, flair_text_color, time, awards, url, video, postType }) => {\r\n    const ms = time * 1000;\r\n\r\n    const decodeHtml = (html) => {\r\n        var txt = document.createElement(\"div\");\r\n        txt.innerHTML = html;\r\n        return txt.childNodes.length === 0 ? \"\" : txt.childNodes[0].nodeValue;\r\n    };\r\n\r\n    const typeOfPost = (postType) => {\r\n        switch (postType) {\r\n            case \"link\":\r\n                return <a className=\"postLink\" href={url}>{url}</a>;\r\n            case \"hosted:video\":\r\n                return (\r\n                    <video className=\"postVideo\" controls src={video.reddit_video.fallback_url} >\r\n                        <p>Sorry, your browser doesn't support embedded videos.</p>\r\n                    </video>\r\n                );\r\n            case \"image\":\r\n                return < img className=\"postImg\" src={url} alt=\"\" />;\r\n            case \"rich:video\":\r\n                return (\r\n                    < div className=\"postVideo\" dangerouslySetInnerHTML={{ __html: decodeHtml(video.oembed.html) }} />\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const abbrScore = (num) => {\r\n        if (num > 1000) {\r\n            return (Math.round(num / 1000)).toString() + \"k\";\r\n        } else {\r\n            return (num).toString();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <a className=\"cardLink\" href={`https://www.reddit.com${permalink}`} target=\"_blank\" rel=\"noreferrer\">\r\n\r\n            <div className=\"card\">\r\n                <div className=\"postScore\">\r\n                    <div><ion-icon name=\"caret-up\"></ion-icon></div>\r\n                    <div>{abbrScore(score)}</div>\r\n                    <div><ion-icon name=\"caret-down\"></ion-icon></div>\r\n\r\n                </div>\r\n                <div className=\"postContent\">\r\n                    <div className=\"postInfo\">\r\n                        <div className=\"subName\"><a href={`https://www.reddit.com/${subreddit}`}>{subreddit}</a></div>\r\n                        <span className=\"seperator\">&#8231;</span>\r\n                        <div className=\"user\">Posted by <a href={`https://www.reddit.com/user/${author}`}>u/{author}</a></div>\r\n                        <span className=\"seperator\">&#8231;</span>\r\n                        <div className=\"postTime\"><a href={`https://www.reddit.com${permalink}`} target=\"_blank\" rel=\"noreferrer\"><ReactTimeAgo date={ms} locale=\"en-US\" /></a></div>\r\n                    </div>\r\n\r\n                    <div className=\"awards\">\r\n                        {awards.map((award, index) => {\r\n                            return (\r\n                                <span className=\"award\">\r\n                                    <img src={award.icon_url} alt={award.name} /> x{award.count}\r\n                                </span>\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"titleRow\">\r\n                        <h3 className=\"postTitle\">{title}</h3>\r\n                        {flair ? <div className={`${flair_text_color} flairLabel`} style={{ backgroundColor: flair_color }} dangerouslySetInnerHTML={{ __html: flair }} /> : null}\r\n                    </div>\r\n\r\n                    <div className=\"selftext\" dangerouslySetInnerHTML={{ __html: decodeHtml(selftext) }} />\r\n\r\n                    <div className=\"postBody\">{typeOfPost(postType)}</div>\r\n\r\n                    <a className=\"postComments\" href={`https://www.reddit.com${permalink}`} target=\"_blank\" rel=\"noreferrer\">\r\n                        <div>\r\n                            <ion-icon name=\"chatbox\"></ion-icon>\r\n                            <span>{comments} comments</span>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Feed;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\n\r\nTimeAgo.addDefaultLocale(en);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}